apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

android {
    compileSdkVersion parent.ext.androidCompileSdkVersion
    buildToolsVersion parent.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId parent.ext.androidApplicationId
        minSdkVersion parent.ext.androidMinSdkVersion
        targetSdkVersion parent.ext.androidTargetSdkVersion
        versionCode parent.ext.androidVersionCode
        versionName parent.ext.androidVersionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }


    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    testCompile parent.ext.libJUnit
    compile project(':domain')
    compile project(':presentation')
    compile project(':repository')
    compile project(':datasources')
    compile parent.ext.libAppCompat
    compile parent.ext.libButterknife
    provided parent.ext.libAnnotations
    provided parent.ext.libDaggerCompiler
    compile parent.ext.libDagger
    androidTestCompile parent.ext.libSupportTest
    androidTestCompile parent.ext.libEspresso
}


task checkstyle(type: Checkstyle) {
    configFile file('../config/checkstyle/checkstyle.xml')
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}


task runAcceptanceTests(dependsOn: [':android:androidTest']) {
    description 'Run application acceptance test.'
}

task runUnitTests(dependsOn: [':domain:test']) {
    description 'Run unit tests for both domain layer.'
}